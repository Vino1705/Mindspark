'use server';

/**
 * @fileOverview An AI-powered brainstorming agent.
 *
 * - aiBrainstorm - A function that handles the brainstorming process.
 * - AiBrainstormInput - The input type for the aiBrainstorm function.
 * - AiBrainstormOutput - The return type for the aiBrainstorm function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AiBrainstormInputSchema = z.object({
  topic: z.string().describe('The topic or idea to brainstorm about.'),
});
export type AiBrainstormInput = z.infer<typeof AiBrainstormInputSchema>;

const AiBrainstormOutputSchema = z.object({
  ideas: z.array(z.string()).describe('An array of creative ideas and outlines generated by the AI.'),
});
export type AiBrainstormOutput = z.infer<typeof AiBrainstormOutputSchema>;

export async function aiBrainstorm(input: AiBrainstormInput): Promise<AiBrainstormOutput> {
  return aiBrainstormFlow(input);
}

const prompt = ai.definePrompt({
  name: 'aiBrainstormPrompt',
  input: {schema: AiBrainstormInputSchema},
  output: {schema: AiBrainstormOutputSchema},
  prompt: `You are a creative brainstorming assistant. Generate creative ideas and outlines based on the given topic.

Topic: {{{topic}}}

Ideas:`, // Keep the Ideas: tag, the LLM will write the result into it
});

const aiBrainstormFlow = ai.defineFlow(
  {
    name: 'aiBrainstormFlow',
    inputSchema: AiBrainstormInputSchema,
    outputSchema: AiBrainstormOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
